{"version":3,"sources":["constants.js","util/GridGenerationUtil.js","reducers/index.js","components/Node.js","actions/index.js","components/Grid.js","util/AlgorithmUtil.js","util/algorithms/BFS.js","components/SelectAlgorithmDropdown.js","components/Menu.js","components/InfoPanel.js","components/App.js","index.js"],"names":["gridDetails","START_NODE_ROW","START_NODE_COL","FINISH_NODE_ROW","FINISH_NODE_COL","TOTAL_ROW","TOTAL_COL","generateInitalGrid","row","col","grid","r","currentRow","c","push","isStart","isFinish","distance","Infinity","isVisited","isWall","isFrontier","previousNode","isPath","generateToggleWallGrid","currentGrid","newGrid","slice","node","newNode","generateToggleFrontierGrid","generateMarkVisitedGrid","generateMarkPathGrid","generateNodeKey","toString","combineReducers","selectedAlgorithm","state","action","type","payload","isMousePressed","connect","ownProps","dispatch","onMouseDown","toggleWallNode","mouseIsNotPressed","nodeType","id","className","onMouseUp","onMouseEnter","Grid","this","props","map","rowIndex","key","colIndex","React","Component","sleep","ms","Promise","resolve","setTimeout","getNodeNeighbours","neighbours","upNode","rightNode","downNode","leftNode","BFS","toggleVisitedNode","toggleFrontierNode","togglePathNode","queue","Queue","startNode","enqueue","isEmpty","currentNode","dequeue","showPath","i","length","neighbour","console","log","finishNode","stack","Stack","undefined","size","pop","options","text","value","SelectAlgorithmDropdown","Dropdown","fluid","simple","item","onChange","event","data","algorithm","Menu","runSelectedAlgorithm","bind","run","clearBoard","runButtonClass","onClick","LegendItem","style","margin","border","borderRadius","InfoPanel","class","App","store","createStore","reducer","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.7bbb8ae1.chunk.js","sourcesContent":["export const gridDetails = {\r\n    TOTAL_ROW: 20,\r\n    TOTAL_COL: 50,\r\n    START_NODE_ROW: 10,\r\n    START_NODE_COL: 5,\r\n    FINISH_NODE_ROW: 10,\r\n    FINISH_NODE_COL: 45 \r\n}","import { gridDetails } from '../constants';\r\n\r\nconst  {START_NODE_ROW, START_NODE_COL, FINISH_NODE_ROW, FINISH_NODE_COL, TOTAL_ROW, TOTAL_COL} = gridDetails;\r\n\r\nfunction NodeFactory(row, col) {\r\n    return {\r\n        row,\r\n        col,\r\n        isStart: row === START_NODE_ROW && col === START_NODE_COL,\r\n        isFinish: row === FINISH_NODE_ROW && col === FINISH_NODE_COL,\r\n        distance: Infinity,\r\n        isVisited: false,\r\n        isWall: false,\r\n        isFrontier: false,\r\n        previousNode: null,\r\n        isPath: false\r\n      };\r\n}\r\n\r\nexport function generateInitalGrid() {\r\n    const grid = [];\r\n\r\n    for(let r = 0; r < TOTAL_ROW; r++) {\r\n        const currentRow = [];\r\n\r\n        for(let c = 0; c < TOTAL_COL; c++) {\r\n            currentRow.push(NodeFactory(r, c));\r\n        }\r\n\r\n        grid.push(currentRow);\r\n    }\r\n\r\n    return grid;\r\n}\r\n\r\nexport function generateToggleWallGrid(row, col, currentGrid) {\r\n    const newGrid = currentGrid.slice();\r\n    const node = newGrid[row][col];\r\n\r\n    const newNode = {\r\n        ...node,\r\n        isWall: !node.isWall\r\n    };\r\n    newGrid[row][col] = newNode;\r\n            \r\n    return newGrid;\r\n}\r\n\r\nexport function generateToggleFrontierGrid(row, col, currentGrid) {\r\n    const newGrid = currentGrid.slice();\r\n    const node = newGrid[row][col];\r\n\r\n    const newNode = {\r\n        ...node,\r\n        isFrontier: !node.isFrontier\r\n    };\r\n    newGrid[row][col] = newNode;\r\n            \r\n    return newGrid;\r\n}\r\n\r\nexport function generateMarkVisitedGrid(row, col, currentGrid) {\r\n    const newGrid = currentGrid.slice();\r\n    const node = newGrid[row][col];\r\n\r\n    const newNode = {\r\n        ...node,\r\n        isVisited: true,\r\n        isFrontier: false\r\n    };\r\n    newGrid[row][col] = newNode;\r\n            \r\n    return newGrid;\r\n}\r\n\r\nexport function generateMarkPathGrid(row, col, currentGrid) {\r\n    const newGrid = currentGrid.slice();\r\n    const node = newGrid[row][col];\r\n\r\n    const newNode = {\r\n        ...node,\r\n        isPath: true\r\n    };\r\n    newGrid[row][col] = newNode;\r\n            \r\n    return newGrid;\r\n}\r\n\r\nexport function generateNodeKey(row, col) {\r\n    return (row * TOTAL_ROW + col).toString();\r\n}","import { combineReducers } from 'redux';\r\nimport { generateInitalGrid, generateToggleWallGrid, generateToggleFrontierGrid, generateMarkVisitedGrid, generateMarkPathGrid } from '../util/GridGenerationUtil'\r\n\r\nconst gridReducer = (state=generateInitalGrid(), action) => {\r\n    switch(action.type) {\r\n        case 'TOOGLE_WALL_NODE':\r\n            return generateToggleWallGrid(action.payload.row, action.payload.col, state);\r\n\r\n        case 'TOGGLE_FRONTIER_NDOE':\r\n            return generateToggleFrontierGrid(action.payload.row, action.payload.col, state);\r\n\r\n        case 'TOGGLE_VISITED_NODE':\r\n            return generateMarkVisitedGrid(action.payload.row, action.payload.col, state);\r\n\r\n        case 'TOGGLE_PATH_NODE':\r\n            return generateMarkPathGrid(action.payload.row, action.payload.col, state);\r\n\r\n        case 'CLEAR_BOARD':\r\n            return generateInitalGrid();\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst mousePressedReducer = (state=false, action) => {\r\n    switch(action.type) {\r\n        case 'PRESSED':\r\n            return true;\r\n\r\n        case 'NOT_PRESSED':\r\n            return false;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst selectAlgorithmReducer = (state='none', action) => {\r\n    switch(action.type) {\r\n        case 'BFS':\r\n            return 'BFS';\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default combineReducers({\r\n    selectedAlgorithm: selectAlgorithmReducer,\r\n    grid: gridReducer,\r\n    isMousePressed: mousePressedReducer\r\n});","import '../css/Node.css';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { mouseIsNotPressed, onMouseDown } from '../actions'\r\n\r\nconst Node = ({ row, col, isStart, isFinish, isWall, isVisited, isFrontier, isPath, isMousePressed, onMouseDown, mouseIsNotPressed}) => {\r\n    const nodeType = isFinish\r\n        ? 'node-finish'\r\n        : isStart\r\n        ? 'node-start'\r\n        : isPath\r\n        ? 'node-path'\r\n        : isWall\r\n        ? 'node-wall'\r\n        : isVisited\r\n        ? 'node-visited'\r\n        : isFrontier\r\n        ? 'node-frontier'\r\n        : ''\r\n\r\n    return <div \r\n            id={`node-${row}-${col}`}\r\n            className={`node ${nodeType}`}\r\n            onMouseDown={(!isFrontier && !isVisited && !isFinish && !isStart) ? onMouseDown : () => {}}\r\n            onMouseUp={mouseIsNotPressed}\r\n            onMouseEnter={(isMousePressed && !isWall && !isFrontier && !isVisited && !isFinish && !isStart) ? onMouseDown : () => {}}></div>\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const node = state.grid[ownProps.row][ownProps.col];\r\n\r\n    return {\r\n        isStart:  node.isStart,\r\n        isFinish: node.isFinish,\r\n        isWall: node.isWall,\r\n        isFrontier: node.isFrontier,\r\n        isVisited: node.isVisited,\r\n        isPath: node.isPath,\r\n        isMousePressed: state.isMousePressed\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        onMouseDown: () => onMouseDown(ownProps.row, ownProps.col, dispatch),\r\n        mouseIsNotPressed: () => dispatch(mouseIsNotPressed()),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Node);","const toggleWallNode = (row, col) => {\r\n    return {\r\n        type: 'TOOGLE_WALL_NODE',\r\n        payload: {\r\n            row, col\r\n        }\r\n    }\r\n}\r\n\r\nconst mouseIsPressed = () => {\r\n    return { type: 'PRESSED'};\r\n}\r\n\r\nexport const mouseIsNotPressed = () => {\r\n    return { type: 'NOT_PRESSED'};\r\n}\r\n\r\nexport const onMouseDown = (row, col, dispatch) => {\r\n    dispatch(toggleWallNode(row, col));\r\n    dispatch(mouseIsPressed());\r\n}\r\n\r\nexport const clearBoard = () => {\r\n    return { type: 'CLEAR_BOARD'};\r\n}\r\n\r\nexport const toggleFrontierNode = (row, col) => {\r\n    return {\r\n        type: 'TOGGLE_FRONTIER_NODE',\r\n        payload: {\r\n            row, col\r\n        }\r\n    }\r\n}\r\n\r\nexport const toggleVisitedNode = (row, col) => {\r\n    return {\r\n        type: 'TOGGLE_VISITED_NODE',\r\n        payload: {\r\n            row, col\r\n        }\r\n    }\r\n}\r\n\r\nexport const togglePathNode = (row, col) => {\r\n    return {\r\n        type: 'TOGGLE_PATH_NODE',\r\n        payload: {\r\n            row, col\r\n        }\r\n    }\r\n}\r\n\r\nexport const setSelectedAlgorithm = (algorithmName) => {\r\n    return {\r\n        type: algorithmName\r\n    }\r\n}","import React from 'react';\r\nimport Node from './Node';\r\nimport { connect } from 'react-redux';\r\nimport '../css/Grid.css';\r\nimport { generateNodeKey } from '../util/GridGenerationUtil'\r\n\r\nclass Grid extends React.Component {\r\n\r\n    render() {\r\n        const {grid} = this.props;\r\n\r\n        return (\r\n            <div className=\"grid\">\r\n                {\r\n                    grid.map((row, rowIndex) => {\r\n                        return (\r\n                            <div className=\"grid-row\" key={rowIndex}>\r\n                                {\r\n                                    row.map((col, colIndex) => {\r\n                                        return (<Node \r\n                                                    key={generateNodeKey(rowIndex, colIndex)}\r\n                                                    row={rowIndex} \r\n                                                    col={colIndex}/>);\r\n                                    })\r\n                                }\r\n                            </div>\r\n                        )\r\n                        \r\n                    })\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        grid: state.grid,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Grid);","import { gridDetails } from '../constants';\r\nconst { TOTAL_ROW, TOTAL_COL } = gridDetails;\r\n\r\nexport function sleep(ms) {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\n\r\nexport const getNodeNeighbours = (state, node) => {\r\n    let neighbours = [];\r\n\r\n    if(node.row > 0) {\r\n        const upNode = state[node.row - 1][node.col];\r\n        neighbours.push(upNode);\r\n    }\r\n\r\n    if(node.col < (TOTAL_COL - 1)) {\r\n        const rightNode = state[node.row][node.col + 1];\r\n        neighbours.push(rightNode);\r\n    }\r\n\r\n    if(node.row < (TOTAL_ROW - 1)) {\r\n        const downNode = state[node.row + 1][node.col];\r\n        neighbours.push(downNode);\r\n    }\r\n\r\n    if(node.col > 0) {\r\n        const leftNode = state[node.row][node.col - 1];\r\n        neighbours.push(leftNode);\r\n    }\r\n\r\n    return neighbours;\r\n}","import { gridDetails } from '../../constants';\r\nimport { getNodeNeighbours, sleep } from '../AlgorithmUtil'\r\nimport Queue from 'queue-fifo';\r\nimport Stack from '@datastructures-js/stack';\r\n\r\nconst  {START_NODE_ROW, START_NODE_COL, FINISH_NODE_ROW, FINISH_NODE_COL } = gridDetails;\r\n  \r\nexport default class BFS {\r\n    constructor(state, toggleVisitedNode, toggleFrontierNode, togglePathNode) {\r\n        this.state = state;\r\n        this.toggleVisitedNode = toggleVisitedNode;\r\n        this.toggleFrontierNode = toggleFrontierNode;\r\n        this.togglePathNode = togglePathNode;\r\n    }\r\n\r\n    async run() {\r\n        const queue = new Queue();\r\n        const startNode = this.state[START_NODE_ROW][START_NODE_COL];\r\n        queue.enqueue(startNode);\r\n\r\n        while(!queue.isEmpty()) {\r\n            const currentNode = queue.dequeue();\r\n            currentNode.isFrontier = false;\r\n            currentNode.isVisited = true;\r\n            this.toggleVisitedNode(currentNode.row, currentNode.col);\r\n\r\n            if(currentNode.row === FINISH_NODE_ROW && currentNode.col === FINISH_NODE_COL) {\r\n                await this.showPath();\r\n                break;\r\n            }\r\n\r\n            const neighbours = getNodeNeighbours(this.state, currentNode);\r\n            for(let i = 0; i < neighbours.length; i++) {\r\n                const neighbour = neighbours[i];\r\n                if(!neighbour.isWall && !neighbour.isVisited && !neighbour.isFrontier) {\r\n\r\n                    if(currentNode.row === FINISH_NODE_ROW && currentNode.col === FINISH_NODE_COL) {\r\n                        await this.showPath();\r\n                        return;\r\n                    }\r\n\r\n                    neighbour.isFrontier = true;\r\n                    neighbour.previousNode = { row: currentNode.row, col: currentNode.col};\r\n                    this.toggleFrontierNode(neighbour.row, neighbour.col);\r\n                    queue.enqueue(neighbour);\r\n                }\r\n            }\r\n            await sleep(0);\r\n        }\r\n    }\r\n\r\n    async showPath() {\r\n        console.log(\"showPath\")\r\n        const finishNode = this.state[FINISH_NODE_ROW][FINISH_NODE_COL];\r\n        let currentNode = finishNode;\r\n        const stack = new Stack();\r\n        console.log(`finishNode: ${currentNode.row}, ${currentNode.col}`)\r\n        while(currentNode !== undefined) {\r\n            console.log(`path node: ${currentNode.row}, ${currentNode.col}`)\r\n            stack.push(currentNode);\r\n\r\n            if(!currentNode.previousNode) {\r\n                break;\r\n            }\r\n            currentNode = this.state[currentNode.previousNode.row][currentNode.previousNode.col];\r\n        }\r\n\r\n        console.log(stack.size());\r\n\r\n        while(!stack.isEmpty()) {\r\n            let node = stack.pop();\r\n            this.togglePathNode(node.row, node.col);\r\n            await sleep(0);\r\n        }\r\n\r\n    }\r\n\r\n    test() {\r\n        const startNode = this.state[START_NODE_ROW][START_NODE_COL];\r\n        const neighbours = getNodeNeighbours(this.state, startNode);\r\n        console.log(neighbours);\r\n        for(const neighbour in neighbours) {\r\n            this.toggleFrontierNode(neighbour.row, neighbour.col);\r\n        }\r\n\r\n        console.log(neighbours);\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Dropdown } from 'semantic-ui-react';\r\nimport { setSelectedAlgorithm } from '../actions';\r\n\r\nconst options = [\r\n    { key: 1, text: 'Breadth First Search (BFS)', value: 'BFS' }\r\n  ]\r\n\r\nclass SelectAlgorithmDropdown extends React.Component {\r\n    render() {\r\n        return (\r\n            <Dropdown fluid text='Select Algorithm' options={options} simple item onChange={(event, data) => {this.props.onChange(data.value)}}/>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onChange: (algorithm) => {dispatch(setSelectedAlgorithm(algorithm))}\r\n    }\r\n}\r\n  \r\nexport default connect(null, mapDispatchToProps)(SelectAlgorithmDropdown)","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { clearBoard, toggleFrontierNode, toggleVisitedNode, togglePathNode } from '../actions';\r\nimport BFS from '../util/algorithms/BFS';\r\nimport SelectAlgorithmDropdown from './SelectAlgorithmDropdown';\r\n\r\nclass Menu extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.runSelectedAlgorithm = this.runSelectedAlgorithm.bind(this);\r\n    }\r\n\r\n    runSelectedAlgorithm() {\r\n        switch(this.props.selectedAlgorithm) {\r\n            case \"BFS\":\r\n                const bfs = new BFS(this.props.grid, this.props.toggleVisitedNode, this.props.toggleFrontierNode, this.props.togglePathNode);\r\n                bfs.run();\r\n                break;\r\n\r\n            default:\r\n                return;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { clearBoard, selectedAlgorithm } = this.props;\r\n\r\n        const runButtonClass = selectedAlgorithm === 'none' ? \"active item\" : \"item\" \r\n\r\n        return (\r\n            <div className=\"ui three item menu\">\r\n                <a onClick={this.runSelectedAlgorithm} className={runButtonClass}>Run!</a>\r\n                <SelectAlgorithmDropdown />\r\n                <a onClick={clearBoard} className=\"item\">Clear Board</a>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        grid: state.grid,\r\n        selectedAlgorithm: state.selectedAlgorithm\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        clearBoard: () => dispatch(clearBoard()),\r\n        toggleVisitedNode: (row, col) => dispatch(toggleVisitedNode(row, col)),\r\n        toggleFrontierNode: (row, col) => dispatch(toggleFrontierNode(row, col)),\r\n        togglePathNode: (row, col) => dispatch(togglePathNode(row, col))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Menu);","import React from 'react';\r\n\r\nconst LegendItem = ({nodeType}) => {\r\n    return (\r\n        <div className=\"column\" style={{margin: \"0 5vh 5vh 3vh\"}}>\r\n            <div className={`node node-${nodeType}`} style={{border: \"2px solid white\", borderRadius: \"5px\"}}></div>\r\n            <div>{nodeType}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst InfoPanel = () => {\r\n    return (\r\n        <div className=\"ui center aligned grid\">\r\n            <div className=\"row \"style={{margin: \"2vh 0 0 0\"}}><h2 class=\"ui dividing header\">Legend</h2></div>\r\n            <LegendItem nodeType={'unvisited'} />\r\n            <LegendItem nodeType={'start'} />\r\n            <LegendItem nodeType={'finish'} />\r\n            <LegendItem nodeType={'wall'} />\r\n            <LegendItem nodeType={'visited'} />\r\n            <LegendItem nodeType={'frontier'} />\r\n            <LegendItem nodeType={'path'} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InfoPanel;","import React from 'react';\r\nimport Grid from './Grid';\r\nimport Menu from './Menu';\r\nimport InfoPanel from './InfoPanel';\r\nimport '../css/App.css';\r\n\r\nclass App extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"wrapper\" className=\"App\">\r\n                <Menu/>\r\n                <Grid />\r\n                <InfoPanel/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore } from 'redux';\r\nimport reducer from './reducers';\r\nimport App from './components/App';\r\nimport './css/App.css';\r\n\r\nexport const store = createStore(reducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\n\r\nReactDOM.render(<Provider store={store}><App /></Provider>, document.querySelector('#root'));\r\n"],"sourceRoot":""}